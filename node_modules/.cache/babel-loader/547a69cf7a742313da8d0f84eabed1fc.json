{"ast":null,"code":"import _toConsumableArray from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Alex/Documents/Nackademin/testExamination/src/components/Bot/Bot.js\";\nimport React, { Component } from 'react';\nimport TypingIndicator from './TypingIndicator';\nimport MessageForm from './MessageForm';\nimport Message from './Message';\nimport * as api from '../../api';\n\nvar Bot =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Bot, _Component);\n\n  function Bot() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Bot);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Bot)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      typing: false,\n      messages: []\n    };\n\n    _this.onSubmit = function (message) {\n      var newMessage = {\n        message: message,\n        bot: false\n      };\n      var newMessages = [].concat(_toConsumableArray(_this.state.messages), [newMessage]);\n\n      _this.setState({\n        messages: newMessages,\n        typing: false\n      });\n\n      _this.sendReply();\n    };\n\n    _this.sendReply = function () {\n      _this.setState({\n        typing: true\n      });\n\n      api.botReply().then(function (reply) {\n        _this.setState({\n          messages: [].concat(_toConsumableArray(_this.state.messages), [reply]),\n          typing: false\n        });\n      });\n    };\n\n    _this.renderMessages = function (messages) {\n      return messages.map(function (message, index) {\n        return React.createElement(Message, Object.assign({\n          key: index\n        }, message, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Bot, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"mx-auto w-1/2 h-auto mb-4 mt-8 pt-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mx-auto h-64 mb-4 p-4 border flex flex-col justify-end rounded shadow border overflow-y-scroll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.renderMessages(this.state.messages), React.createElement(TypingIndicator, {\n        typing: this.state.typing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(MessageForm, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Bot;\n}(Component);\n\nexport default Bot;","map":{"version":3,"sources":["/Users/Alex/Documents/Nackademin/testExamination/src/components/Bot/Bot.js"],"names":["React","Component","TypingIndicator","MessageForm","Message","api","Bot","state","typing","messages","onSubmit","message","newMessage","bot","newMessages","setState","sendReply","botReply","then","reply","renderMessages","map","index"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE,KADF;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;UAKRC,Q,GAAW,UAAAC,OAAO,EAAI;AACpB,UAAMC,UAAU,GAAG;AACjBD,QAAAA,OAAO,EAAPA,OADiB;AAEjBE,QAAAA,GAAG,EAAE;AAFY,OAAnB;AAIA,UAAMC,WAAW,gCAAO,MAAKP,KAAL,CAAWE,QAAlB,IAA4BG,UAA5B,EAAjB;;AACA,YAAKG,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEK,WAAZ;AAAyBN,QAAAA,MAAM,EAAE;AAAjC,OAAd;;AACA,YAAKQ,SAAL;AACD,K;;UAEDA,S,GAAY,YAAM;AAChB,YAAKD,QAAL,CAAc;AAAEP,QAAAA,MAAM,EAAE;AAAV,OAAd;;AACAH,MAAAA,GAAG,CAACY,QAAJ,GACGC,IADH,CACQ,UAAAC,KAAK,EAAI;AACb,cAAKJ,QAAL,CAAc;AAAEN,UAAAA,QAAQ,+BAAM,MAAKF,KAAL,CAAWE,QAAjB,IAA2BU,KAA3B,EAAV;AAA6CX,UAAAA,MAAM,EAAE;AAArD,SAAd;AACD,OAHH;AAID,K;;UAEDY,c,GAAiB,UAAAX,QAAQ;AAAA,aAAIA,QAAQ,CAClCY,GAD0B,CACtB,UAACV,OAAD,EAAUW,KAAV;AAAA,eAAoB,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA;AAAd,WAAyBX,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAApB;AAAA,OADsB,CAAJ;AAAA,K;;;;;;;6BAGhB;AACP,aACE;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKS,cAAL,CAAoB,KAAKb,KAAL,CAAWE,QAA/B,CADH,EAEE,oBAAC,eAAD;AAAiB,QAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,oBAAC,WAAD;AAAa,QAAA,QAAQ,EAAE,KAAKE,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EArCeT,S;;AAwClB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport TypingIndicator from './TypingIndicator';\nimport MessageForm from './MessageForm';\nimport Message from './Message';\nimport * as api from '../../api';\n\nclass Bot extends Component {\n  state = {\n    typing: false,\n    messages: [],\n  };\n\n  onSubmit = message => {\n    const newMessage = {\n      message,\n      bot: false\n    };\n    const newMessages = [...this.state.messages, newMessage];\n    this.setState({ messages: newMessages, typing: false });\n    this.sendReply();\n  };\n\n  sendReply = () => {\n    this.setState({ typing: true });\n    api.botReply()\n      .then(reply => {\n        this.setState({ messages: [...this.state.messages, reply], typing: false });\n      })\n  };\n\n  renderMessages = messages => messages\n    .map((message, index) => <Message key={index} {...message} />);\n\n  render() {\n    return (\n      <div className=\"mx-auto w-1/2 h-auto mb-4 mt-8 pt-8\">\n        <div className=\"mx-auto h-64 mb-4 p-4 border flex flex-col justify-end rounded shadow border overflow-y-scroll\">\n          {this.renderMessages(this.state.messages)}\n          <TypingIndicator typing={this.state.typing} />\n        </div>\n        <MessageForm onSubmit={this.onSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default Bot;\n"]},"metadata":{},"sourceType":"module"}