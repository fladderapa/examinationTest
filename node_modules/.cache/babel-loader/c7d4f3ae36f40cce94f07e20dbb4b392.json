{"ast":null,"code":"import _toConsumableArray from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Alex/Documents/Nackademin/testExamination/src/components/CreateNewComment.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../api';\n\nvar CreateNewComment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateNewComment, _Component);\n\n  function CreateNewComment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateNewComment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateNewComment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comment: ''\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var fetchedComments = api.fetchAllComments();\n      var newComment = api.createCommentObject(_this.state.comment, _this.props.postId, _this.props.author);\n      api.storeCommentObject([].concat(_toConsumableArray(fetchedComments), [newComment]));\n\n      _this.props.updateComments(_this.props.postId);\n\n      _this.setState({\n        comment: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateNewComment, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        className: \"container mx-auto flex flex-col p-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"comment\",\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Comment\"), React.createElement(\"textarea\", {\n        id: \"comment\",\n        value: this.state.comment,\n        onChange: this.onChange,\n        name: \"comment\",\n        className: \"shadow rounded border mb-2 p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Comment\",\n        className: \"bg-indigo-dark hover:bg-indigo-darker text-white font-bold py-2 px-4 rounded-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CreateNewComment;\n}(Component);\n\nCreateNewComment.propTypes = {\n  postId: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  updateComments: PropTypes.func.isRequired\n};\nexport default CreateNewComment;","map":{"version":3,"sources":["/Users/Alex/Documents/Nackademin/testExamination/src/components/CreateNewComment.js"],"names":["React","Component","PropTypes","api","CreateNewComment","state","comment","onChange","e","setState","target","name","value","onSubmit","preventDefault","fetchedComments","fetchAllComments","newComment","createCommentObject","props","postId","author","storeCommentObject","updateComments","propTypes","string","isRequired","func"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;;IAEMC,gB;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;UAIRC,Q,GAAW,UAAAC,CAAC;AAAA,aAAI,MAAKC,QAAL,qBAAiBD,CAAC,CAACE,MAAF,CAASC,IAA1B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C,EAAJ;AAAA,K;;UAEZC,Q,GAAW,UAAAL,CAAC,EAAI;AACdA,MAAAA,CAAC,CAACM,cAAF;AACA,UAAMC,eAAe,GAAGZ,GAAG,CAACa,gBAAJ,EAAxB;AACA,UAAMC,UAAU,GAAGd,GAAG,CAACe,mBAAJ,CACjB,MAAKb,KAAL,CAAWC,OADM,EAEjB,MAAKa,KAAL,CAAWC,MAFM,EAGjB,MAAKD,KAAL,CAAWE,MAHM,CAAnB;AAKAlB,MAAAA,GAAG,CAACmB,kBAAJ,8BAA2BP,eAA3B,IAA4CE,UAA5C;;AACA,YAAKE,KAAL,CAAWI,cAAX,CAA0B,MAAKJ,KAAL,CAAWC,MAArC;;AACA,YAAKX,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;;;;;;6BAEQ;AACP,aACE;AACE,QAAA,QAAQ,EAAE,KAAKO,QADjB;AAEE,QAAA,SAAS,EAAC,qCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,SAAS,EAAC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAOE;AACE,QAAA,EAAE,EAAC,SADL;AAEE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWC,OAFpB;AAGE,QAAA,QAAQ,EAAE,KAAKC,QAHjB;AAIE,QAAA,IAAI,EAAC,SAJP;AAKE,QAAA,SAAS,EAAC,gCALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAcE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,SAAS,EAAC,mFAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,CADF;AAsBD;;;;EA3C4BN,S;;AA8C/BG,gBAAgB,CAACoB,SAAjB,GAA6B;AAC3BJ,EAAAA,MAAM,EAAElB,SAAS,CAACuB,MAAV,CAAiBC,UADE;AAE3BL,EAAAA,MAAM,EAAEnB,SAAS,CAACuB,MAAV,CAAiBC,UAFE;AAG3BH,EAAAA,cAAc,EAAErB,SAAS,CAACyB,IAAV,CAAeD;AAHJ,CAA7B;AAMA,eAAetB,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as api from '../api';\n\nclass CreateNewComment extends Component {\n  state = {\n    comment: ''\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = e => {\n    e.preventDefault();\n    const fetchedComments = api.fetchAllComments();\n    const newComment = api.createCommentObject(\n      this.state.comment,\n      this.props.postId,\n      this.props.author\n    );\n    api.storeCommentObject([...fetchedComments, newComment]);\n    this.props.updateComments(this.props.postId);\n    this.setState({ comment: '' });\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={this.onSubmit}\n        className='container mx-auto flex flex-col p-6'\n      >\n        <label htmlFor='comment' className='mb-2'>\n          Comment\n        </label>\n        <textarea\n          id='comment'\n          value={this.state.comment}\n          onChange={this.onChange}\n          name='comment'\n          className='shadow rounded border mb-2 p-2'\n        />\n        <input\n          type='submit'\n          value='Comment'\n          className='bg-indigo-dark hover:bg-indigo-darker text-white font-bold py-2 px-4 rounded-full'\n        />\n      </form>\n    );\n  }\n}\n\nCreateNewComment.propTypes = {\n  postId: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n  updateComments: PropTypes.func.isRequired\n}\n\nexport default CreateNewComment;\n"]},"metadata":{},"sourceType":"module"}