{"ast":null,"code":"import _classCallCheck from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Alex/Documents/Nackademin/testExamination/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Alex/Documents/Nackademin/testExamination/src/components/Comments.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CreateNewComment from './CreateNewComment';\nimport SingleComment from './SingleComment';\nimport * as api from '../api';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Comments, _Component);\n\n  function Comments() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Comments);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Comments)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      comments: []\n    };\n\n    _this.setCommentsFromLocalStorage = function () {\n      var postId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.postId;\n      var fetchedComments = api.fetchAllComments();\n      var comments = api.filterComments(fetchedComments, postId);\n\n      _this.setState({\n        comments: comments\n      });\n    };\n\n    _this.removeComment = function (commentId) {\n      api.removeComment(commentId);\n\n      _this.setCommentsFromLocalStorage();\n    };\n\n    _this.renderCommentList = function (comments, currentPersona) {\n      return comments.map(function (comment) {\n        return React.createElement(SingleComment, Object.assign({}, comment, {\n          currentPersona: currentPersona,\n          key: comment.id,\n          onClick: _this.removeComment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setCommentsFromLocalStorage();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"py-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"text-indigo-darker border-b mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Comments\"), this.renderCommentList(this.state.comments, this.props.currentPersona), React.createElement(CreateNewComment, {\n        postId: this.props.postId,\n        author: this.props.currentPersona,\n        updateComments: this.setCommentsFromLocalStorage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Comments;\n}(Component);\n\nComments.propTypes = {\n  postId: PropTypes.string.isRequired,\n  currentPersona: PropTypes.string.isRequired\n};\nexport default Comments;","map":{"version":3,"sources":["/Users/Alex/Documents/Nackademin/testExamination/src/components/Comments.js"],"names":["React","Component","PropTypes","CreateNewComment","SingleComment","api","Comments","state","comments","setCommentsFromLocalStorage","postId","props","fetchedComments","fetchAllComments","filterComments","setState","removeComment","commentId","renderCommentList","currentPersona","map","comment","id","propTypes","string","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAQRC,2B,GAA8B,YAAgC;AAAA,UAA/BC,MAA+B,uEAAtB,MAAKC,KAAL,CAAWD,MAAW;AAC5D,UAAME,eAAe,GAAGP,GAAG,CAACQ,gBAAJ,EAAxB;AACA,UAAML,QAAQ,GAAGH,GAAG,CAACS,cAAJ,CAAmBF,eAAnB,EAAoCF,MAApC,CAAjB;;AACA,YAAKK,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD,K;;UAEDQ,a,GAAgB,UAAAC,SAAS,EAAI;AAC3BZ,MAAAA,GAAG,CAACW,aAAJ,CAAkBC,SAAlB;;AACA,YAAKR,2BAAL;AACD,K;;UAEDS,iB,GAAoB,UAACV,QAAD,EAAWW,cAAX;AAAA,aAClBX,QAAQ,CAACY,GAAT,CAAa,UAAAC,OAAO;AAAA,eAClB,oBAAC,aAAD,oBACMA,OADN;AAEE,UAAA,cAAc,EAAEF,cAFlB;AAGE,UAAA,GAAG,EAAEE,OAAO,CAACC,EAHf;AAIE,UAAA,OAAO,EAAE,MAAKN,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADkB;AAAA,OAApB,CADkB;AAAA,K;;;;;;;wCAfA;AAClB,WAAKP,2BAAL;AACD;;;6BAuBQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEG,KAAKS,iBAAL,CAAuB,KAAKX,KAAL,CAAWC,QAAlC,EAA4C,KAAKG,KAAL,CAAWQ,cAAvD,CAFH,EAGE,oBAAC,gBAAD;AACE,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWD,MADrB;AAEE,QAAA,MAAM,EAAE,KAAKC,KAAL,CAAWQ,cAFrB;AAGE,QAAA,cAAc,EAAE,KAAKV,2BAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAWD;;;;EA1CoBR,S;;AA6CvBK,QAAQ,CAACiB,SAAT,GAAqB;AACnBb,EAAAA,MAAM,EAAER,SAAS,CAACsB,MAAV,CAAiBC,UADN;AAEnBN,EAAAA,cAAc,EAAEjB,SAAS,CAACsB,MAAV,CAAiBC;AAFd,CAArB;AAKA,eAAenB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport CreateNewComment from './CreateNewComment';\nimport SingleComment from './SingleComment';\nimport * as api from '../api';\n\nclass Comments extends Component {\n  state = {\n    comments: []\n  };\n\n  componentDidMount() {\n    this.setCommentsFromLocalStorage();\n  }\n\n  setCommentsFromLocalStorage = (postId = this.props.postId) => {\n    const fetchedComments = api.fetchAllComments();\n    const comments = api.filterComments(fetchedComments, postId);\n    this.setState({ comments });\n  };\n\n  removeComment = commentId => {\n    api.removeComment(commentId);\n    this.setCommentsFromLocalStorage();\n  };\n\n  renderCommentList = (comments, currentPersona) =>\n    comments.map(comment => (\n      <SingleComment\n        {...comment}\n        currentPersona={currentPersona}\n        key={comment.id}\n        onClick={this.removeComment}\n      />\n    ));\n\n  render() {\n    return (\n      <div className=\"py-2\">\n        <h2 className=\"text-indigo-darker border-b mb-4\">Comments</h2>\n        {this.renderCommentList(this.state.comments, this.props.currentPersona)}\n        <CreateNewComment\n          postId={this.props.postId}\n          author={this.props.currentPersona}\n          updateComments={this.setCommentsFromLocalStorage}\n        />\n      </div>\n    );\n  }\n}\n\nComments.propTypes = {\n  postId: PropTypes.string.isRequired,\n  currentPersona: PropTypes.string.isRequired\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}